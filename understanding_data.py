# -*- coding: utf-8 -*-
"""understanding_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18AJlS_IC8vuRVWN5SV1PE_n3FkXzqdPm

# Understanding MNIST data using CDataloader from secml
"""

import secml

# using CDataloader to use the dataset:
# For more details follow this site : https://secml.readthedocs.io/en/stable/secml.data.loader.html#module-secml.data.loader.c_dataloader_mnist

from secml.data.loader import CDataLoaderMNIST

"""### MNIST dataset consist of training set: 60,000 samples, test set: 10,000 samples 
### The images are 28X28 black nad white handwritten digits from 0-9.
"""

loader= CDataLoaderMNIST()
# We are using this loader because we can get required digits from the dataset(can be seen in next cell, we only use digits 0,4)
loader

num_training = 600  # Number of training set samples
num_validation = 200  # Number of validation set samples
num_testing = 200  # Number of testing set samples

digits_classifying=(0,4) # As we are only considerate about misclassifying 4 as 0.

# We are loading training and validation together because loader takes only two attributes (training, testing).
training_validation=loader.load('training', digits=digits_classifying, num_samples=num_training + num_validation) 
# We will split the training_validation into training and validation
training_dataset = training_validation[:num_training, :]
validation_dataset = training_validation[num_training:, :]
# Testing dataset
testing_dataset=loader.load('testing',digits=digits_classifying, num_samples=num_testing)



# As the images are of size 28X28, if we flatten it into 1D array, we get an array of dimension 784, as we have 600 samples
# the dimension becomes (600,784)

"""### Normalise the data between [0,1]
#### Normalisation helps in maintaining consistency in data. 
"""

training_dataset.X /= 255
validation_dataset.X /= 255
testing_dataset.X /= 255